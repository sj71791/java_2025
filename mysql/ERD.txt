1. ERD  (Entity Relationship Diagram)

Step1) 정규화? 
1. 관계형데이터모델 - 데이터간 관계에 초점을 둔 모델
2. 이상(Anomaly)- 공간낭비
    - 삽입, 갱신, 삭제 이상
3. 정규화? 이상을 제거하는것.

Step2)  erd 핵심구성요소
1. 개체(Entity) - 테이블, 개념의 정보단위
2. 속성(Attribute) - 테이블 열, 가장작은 논리적단위
3. 관계(Relationship) - 외래키

예)  emp(deptno) - dept(deptno)
- 부서는 많은 사원을 가지고 있다.
*JPA
@ManyToOne	@OneToMany(mappedBy="dept")

	
Step3)  정규화 1NF-5NF (NF:  Normal Form)
__________________________________________________________
★1NF : 관계 (최소형) - 최소한 테이블, [중복]되는 항목이 없어야 함. 

__________________________________________________________
★2NF : 부분함수 종속제거 -  모든속성이 기본키에 완전함수 종속
	~알면   	~를 알수 있다
	X(결정자) → Y(종속자)
           기본키에 완전함수종속
 
__________________________________________________________
★3NF : 이행함수 종속제거    before)  x-> y->z
		           after)   x-> Y/  Y-> Z
           다른후보키에 의존하지 않음.	
__________________________________________________________
BENF  : 모든 결정자 후보키 
__________________________________________________________
★4NF : 다치종속   
	- 교수2     / 교재2
__________________________________________________________
★5NF : 조인종속 
	- 중간테이블
	- 다: 다 관계

게시판					해시코드
1.  first        	#good    #happy #Beer	1.   good
2.  second  	#good    #Beer		2.   happy
3.  third      	#good      #sad 		3.   beer
					4.   sad

게시판		게시판해시코드	       해시코드
1		1       1		      1.   good
		1       2		      2.   happy
		1       3                      3.   beer
2		2       1
		2       3 	


■ ~로 구성되어 있다.  
[ex001]  하나의 A는 하나의 B로 구성되어 있다.   1:1
[홍길동]┼────┼[목숨]
[홍길동]┼────┼[주민증]


[ex002]  하나의 A는 여러개의 B로 구성되어 있다.   1:다
학과는 많은 교수를 가질 수 있다.
[학과]┼────∈ [김교수, 나교수, 다교수]

> 1:1   1:다   다:다 

[ex003] 관계설정  (1)    1:1   1:다   다:다  중에 고르기
학과와 학생의 관계     1:다
    학과는 많은 학생을 가질 수 있다.
    학생은 한학과에 소속된다.

학과와 교수의 관계      1:다
    학과는 많은 교수를 가질 수 있다.
    교수는 한학과에 소속된다. 

교수와 개설과목 관계    1:다
    교수는 많은 과목을 가르칠 수 있다.      
    과목은 강의하는 교수한명이 지정이 된다.     

과목과 학생의 관계    다:다
    과목은 수강하는 많은 학생을 가진다.
    학생은 많은과목을 수강할 수 있다.


[ex004] 관계설정  (2)     관계도

<<테이블>>
    학생(Student)
        학번(std_id), 성명(std_name), 키(height), 학과코드(dept_id)

    학과(Department)
        학과코드(dept_id), 학과명(dept_name)

    교수(Professor)
        교수코드(prof_id), 교수명(prof_name), 학과코드(dept_id)

    개설과목(Course)
        과목코드(course_id), 과목명(course_name), 교수코드(prof_id),
        시작일(start_date), 종료일(end_date)

    수강(std_Course)
        학번(std_id), 과목코드(course_id)


4-1. 학과와 학생의 관계     1:다   학과는 많은 학생을 가질 수 있다.
<<학과(Department)>>┼  ─	 ─ ─ ─ ─  ─ ─∈<<학생(Student)>> 		
학과코드(dept_id: ★PK)			학번(std_id: ★PK)
학과명(dept_name)				성명(std_name)
					키(height)
					학과코드(dept_id: ☆FK)
- 학과와 학생은 1:다관계
- 부모테이블 학과  / 자식테이블 학생
- 점선 


4-2. 학과와 교수의 관계      1:다    학과는 많은 교수를 가질 수 있다. 
<<학과(Department)>>┼  ─	 ─ ─ ─ ─  ─ ─∈<<교수(Professor)>> 		
학과코드(dept_id: ★PK)			교수코드(prof_id: ★PK)
학과명(dept_name)				교수명(prof_name) 
					학과코드(dept_id: ☆FK)
 
- 학과의 교수관계  1: 다
- 부모는 학과 / 자식은 교수
- 점선  


       
4-3. 교수와 개설과목 관계    1:다    교수는 많은 과목을 가르칠 수 있다.       
<<교수(Professor)>> ┼ ─  ─  ─  ─  ─∈ <<개설과목(Course)>>	
교수코드(prof_id: ★PK)		 과목코드(course_id: ★PK)
교수명(prof_name) 			 과목명(course_name)
학과코드(dept_id: ☆FK)		 종료일(end_date) 	
				 시작일(start_date)
				교수코드(prof_id: ☆FK)
  
- 교수와 개설과목 관계    1:다  
- 부모 교수 / 자식은 개설과목
- 점선

4-4. 과목과 학생의 관계    다:다
    과목은 수강하는 많은 학생을 가진다.
    학생은 많은과목을 수강할 수 있다.  ┼    ─    ∈ 
<<개설과목(Course)>>┼──────∈<<StudentCourse>> ∋────────────┼<<학생(Student)>>
과목코드(course_id: ★PK)		학번(std_id: ★PK)				학번(std_id: ★PK)	
과목명(course_name)		과목코드(course_id: ★PK)			성명(std_name),
종료일(end_date) 								키(height) 
시작일(start_date)								학과코드(dept_id: ☆FK)
교수코드(prof_id: ☆FK)

- 과목과 학생의 관계    다:다	
- 부모테이블 (개설과목, 학생) / 자식 (StudentCourse)
- 실선			
 
1 java				1	2				1 one
2 spring				1	3				2 two
3 mysql				2	1				3 mysql
				2	3
워크벤치열어주세요~!



1. 멤버
userid	userpassword	email	
----------------------------------------------


2. 책데이터
booktitle   ...
-----------------------------------------------